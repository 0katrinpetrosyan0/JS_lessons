'use strict';

/****************************** || (OR) argumentneric gone meky TRUE e */
// alert(true || true); //true
// alert(false || true);//true
// alert(true || false);//true
// alert(false || false);//false


// Если значение не логического типа – то оно к нему приводится в целях вычислений.
// if (1 || 0) {
//     alert('OK');
// }

// Обычно оператор ИЛИ используется в if
// var hour = 9;
// if (hour < 10 || hour > 18) {
//     alert('Офис до 10 или после 18 закрыт');
// }


// Можно передать и больше условий:
// var hour = 12;
// var isWeekend = true;
// if (hour < 10 || hour > 18 || isWeekend) {
//     alert( 'Офис до 10 или после 18 или в выходной закрыт' );
// }


/**
 * Короткий цикл вычислений
 * JavaScript вычисляет несколько ИЛИ слева направо.
 * При этом, чтобы экономить ресурсы,
 * используется так называемый «короткий цикл вычисления».
 * a || b || c Если первый аргумент – true, то результат заведомо будет true
 */
// Наглядный пример
// var a;
// true || (a = 5);
// alert(a);//undefined
	
// var a;
// false || (a = 5);
// alert(a);//5

// || (OR) при вычислении доходит до первого TRUE и возвращает ее
// alert( undefined || '' || 1 || 0 );//1
// Иначе возвращает последнее значение
// alert( undefined || '' || false || null);//null


/* && (AND) возвращает TRUE если оба аперанда истинны, иначе FALSE*/
// alert(true && true); //true
// alert(false && true); //false
// alert(true && false); //false
// alert(false && false);//false


// var hour = 12;
// var minute = 30;
// if (hour === 12 && minute === 30) {
//     alert('Time 12:30');
// }


// вычислится как true && false
// if (1 && 0) {
//     alert('не сработает, т.к. условие ложно');
// }


// К &&(AND) применим тот же короткий цикл, но наоборот
// alert(1 && 2 && null && 3);//
// alert(1 && 2 && 3);//

// Приоритет оператора И && больше, чем ИЛИ ||, так что он выполняется раньше.
// alert(5 || 1 && 0);

/************************************* ! ***************************************/
/**
 * Сначала приводит аргумент к логическому типу true/false.
 * Затем возвращает противоположное значение.
  */
// var num = 10;
// var str = '';

// if (num) {
//     alert(num);
// } else {
//     alert("Переменная пуста.");
// }

// if (!num) {
//     alert("Переменная пуста.");
// } else {
//     alert(num);
// }

// if (!str) {
//     alert(str);
// } else {
//     alert("Строка пуста.");
// }


/************************ Строковое преобразование ***********************/
// alert(String(null) === "null");
// alert(typeof(true + "test"));
// alert("123" + undefined);

/************************  Численное преобразование ***********************/
// undefined - NaN, null - 0, true / false - 1 / 0
// var a = +"123";
// var b = Number("123");
// alert(typeof a);
// alert(typeof b);

// Пробельные символы по краям обрезаются.
// Далее, если остаётся пустая строка, то 0
// var c = +" ";
// alert(typeof c);
// alert(c);

/************************  Логическое преобразование ***********************/
// Для явного преобразования используется двойное логическое отрицание !!value или вызов Boolean(value).
// Все значения, которые интуитивно «пусты», становятся false.
// Их несколько: ( 0 ), ( пустая строка ), ( null ), ( undefined и NaN ).
// В отлчии от PHP строка "0" становится true
// alert(!!'0');
// alert(Boolean(" "));


/********************************** switch ************************************/
// var a = +prompt('Enter Number', '4');
// switch (a) {
//     case 3:
//         alert('Маловато');
//         break;
//     case 4:
//         alert('В точку!');
//         break;
//     case 5:
//         alert('Перебор');
//         break;
//     default:
//         alert('Я таких значений не знаю');
// }


// var a = 2 + 3;
// switch (a) {
//     case 3:
//         alert( 'Маловато' );
//     case 4:
//         alert( 'В точку!' );
//     case 5:
//         alert( 'Перебор' );
//     default:
//         alert( 'Я таких значений не знаю' );
// }

// var a = +prompt('Enter Number','');
// switch (a) {
//     case 4:
//         alert('Верно!');
//         break;
//     case 3:
//     case 5:
//         alert('Неверно!');
//         break;
//     default:
//         alert('Странный результат, очень странный');
// }
